name: CMake Build Matrix

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}

    strategy:
      fail-fast: true
      matrix:
        config:
          - {
              name: "Ubuntu Latest gcc",
              os: ubuntu-latest,
              cc: "gcc",
              cxx: "g++"              
            }

    steps:
    - uses: actions/checkout@v2

    - name: Print env
      run: |
        echo github.event.action: ${{ github.event.action }}
        echo github.event_name: ${{ github.event_name }}

    - name: Install dependencies on Ubuntu
      working-directory: ${{github.workspace}}
      run: bash ./build_support/packages.sh

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Format
      working-directory: ${{github.workspace}}/build
      run: make check-format
      
    - name: Lint
      working-directory: ${{github.workspace}}/build
      run: make check-lint
      
    - name: Tidy
      working-directory: ${{github.workspace}}/build
      run: make check-clang-tidy

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: make check-tests
